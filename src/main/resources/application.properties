# this file to config server and add config kafka.

#server
server.port = 8089


# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mysql://localhost:3306/user?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=kafka-test
spring.datasource.password=dat12345


# ===============================
# JPA / HIBERNATE
# ===============================

## Hibernate Properties
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=none

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false



#kafka config

#-----------------String-----------------------#
; #consumer
; spring.kafka.consumer.bootstrap = localhost:9092
; spring.kafka.consumer.group-id = group_id
; spring.kafka.consumer.auto-offset-reset = earliest
; spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
; spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
;
; #producer
; spring.kafka.producer.bootstrap = localhost:9092
; spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
; spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer



